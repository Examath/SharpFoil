@using SharpFoil.Model
@inject IJSRuntime JSRuntime

<div id="profileCanvasContainer" style="width: 100%; height: 100%;">
    <canvas id="profileCanvas"/>
</div>

@code {
    // [Parameter]
    // public List<StyledPointProfile> Profiles { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("profileCanvas.link");
        }
    }

    // protected override async Task OnParametersSetAsync()
    // {
    //     await JSRuntime.InvokeVoidAsync("profileCanvas.set", Profiles);
    // }

    public async Task Set(Analysis? current, List<Analysis>? other)
    {
        List<StyledPointProfile> profiles = new();

        if (other != null) foreach (Analysis analysis in other)
        {
            if (analysis == current || !analysis.IsVisible) continue;
            if (analysis.CurveProfile != null) profiles.Add(new(analysis.CurveProfile.DisplayProfile, analysis.Color));
        }

        if (current != null)
        {
            if (current.CurveProfile != null) profiles.Add(new(current.CurveProfile.DisplayProfile, current.Color, lineWidth: 2));
            profiles.Add(new(current.SourceProfile, current.Color, usePoints: true));
        }

        await JSRuntime.InvokeVoidAsync("profileCanvas.set", profiles);
    }
}
